{"version":3,"sources":["components/Card.js","components/ListItem.js","components/List.js","components/TodoForm.js","components/Item.js","components/Modal.js","Todo.js","reportWebVitals.js","index.js"],"names":["Card","props","className","children","DoneImg","done","alt","src","ListItem","item","text","onClick","onDone","onItemDeleted","List","items","map","id","TodoForm","useState","setText","onChange","event","textInput","target","value","type","placeholder","preventDefault","onAddItem","alert","Item","this","lastId","Modal","isStopped","isPaused","animationState","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","onHideModal","show","options","height","width","SAVED_ITEMS","Todo","setItems","showModal","setShowModal","useEffect","savedItems","JSON","parse","localStorage","getItem","setItem","stringify","updatedItems","it","filteredItems","filter","console","log","length","Math","random","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de10474c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Card(props){\r\n\r\n    return(\r\n        <div className={props.className? `${props.className} card`: 'card'}>\r\n\r\n        {props.children}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nfunction DoneImg(props){\r\n\r\n    if(props.done){\r\n        return (<img className='icon' alt='done' src='./assets/done.png'></img>)\r\n    }else{\r\n        return (<img className='icon' alt='undone' src='./assets/undone.png'></img>)\r\n    }\r\n}\r\n\r\n\r\nfunction ListItem(props){\r\n\r\n    return(\r\n                    <li>\r\n                   <Card className={props.item.done ? \"done item\" : \"item\"}>\r\n                    {props.item.text}\r\n                    <div className='btn-group'>\r\n                        <button className='btn' onClick={()=>{props.onDone(props.item)}}><DoneImg done={props.item.done}></DoneImg></button>\r\n                        <button className='btn' onClick={()=>{ props.onItemDeleted(props.item)}}><img className='icon' alt='delete' src='./assets/trash.png'></img></button>\r\n                    </div>\r\n                    </Card>\r\n                    </li>\r\n    \r\n    );\r\n\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from './ListItem';\r\n\r\n\r\n\r\n\r\nfunction List(props){\r\n\r\n    return(\r\n        <ul className='tasks'>\r\n            {props.items.map((item)=>{return <ListItem key={item.id} item={item} onDone={props.onDone} onItemDeleted={props.onItemDeleted}></ListItem>})}\r\n        </ul>\r\n    );\r\n\r\n}\r\n\r\nexport default List;","import React, { useState } from 'react';\r\n\r\n\r\n\r\nfunction TodoForm(props){\r\n\r\n    // state\r\n    const [text, setText] = useState('');\r\n\r\n    function handleChange(event){   //To be able to receive an item from a child component to the parent component, I needed to use this callback\r\n\r\n        let textInput = event.target.value;\r\n        setText(textInput);\r\n\r\n    };\r\n\r\n      function addItem(event){\r\n\r\n            event.preventDefault(); //Avoid the button's default behavior within the form\r\n            \r\n            //Conditional for add items\r\n            if(!text){\r\n                alert('Insira uma tarefa');\r\n            } else{\r\n\r\n            //Insert the list\r\n            props.onAddItem(text);\r\n            setText(\"\");\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    return(\r\n        <form className='form'>\r\n            <input className='inputTask' onChange={handleChange} type='text' value={text} placeholder={\"Add Your Task\"}></input>\r\n            <button className='btn' onClick={addItem}><img className='icon' alt='add' src='./assets/add.png'></img></button>\r\n        </form>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default TodoForm;","class Item {\r\n\r\n \r\n static lastId = 0;   \r\n\r\nconstructor(text){\r\n    this.id = Item.lastId++;\r\n    this.text = text;\r\n    this.done = false;\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nexport default Item;","import React, { useState } from 'react';\r\n// import Card from './Card';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from './animation/25548-girl-on-the-tablet.json';\r\n\r\n\r\nfunction Modal(props){\r\n\r\n    const [show, setShow] = useState(true);\r\n    const [animationState, setAnimationState] = useState({isStopped: false, isPaused: false});\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n      };\r\n\r\n\r\n\r\n    return(\r\n        <div id='modal' onClick={props.onHideModal} className={props.show ? \"modal\" : \"modal hideModal\"}>\r\n            {/* <Card className='card-modal'> */}\r\n            <div>\r\n                <Lottie options={defaultOptions}\r\n                height={700}\r\n                width={600}\r\n                isStopped={animationState.isStopped}\r\n                isPaused={animationState.isPaused}/>\r\n            </div>\r\n            <div>\r\n            <h2 className='title'>Add a task <br/>to your list</h2>\r\n            {props.children}\r\n            </div>\r\n             \r\n            {/* </Card> */}\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, useState } from 'react'\r\nimport './Todo.css';\r\nimport List from './components/List.js';\r\nimport TodoForm from './components/TodoForm.js';\r\nimport Item from './components/Item.js';\r\nimport Modal from './components/Modal';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from './components/animation/73296-time-management.json'\r\n\r\nconst SAVED_ITEMS = 'savedItems';\r\n\r\nfunction Todo(){\r\n\r\n    //useState\r\n   \r\n    const [items, setItems] = useState([]);\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const [animationState, setAnimationState] = useState({isStopped: false, isPaused: false});\r\n\r\n    //useEffect\r\n\r\n    //reload page\r\n    useEffect(()=>{\r\n        let savedItems = JSON.parse(localStorage.getItem(SAVED_ITEMS));\r\n        if(savedItems){\r\n            setItems(savedItems);\r\n        }\r\n    },[]);\r\n\r\n    //When the list is updated\r\n    useEffect(()=>{\r\n        localStorage.setItem(SAVED_ITEMS, JSON.stringify(items));\r\n    },[items]);\r\n\r\n    //animation\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n      };\r\n\r\n    function onAddItem(text){\r\n        let it = new Item(text);\r\n        it.id = items.length + Math.random() * 1000;\r\n        setItems([...items, it]);\r\n        setShowModal(false);\r\n    }\r\n  \r\n    function onItemDeleted(item){\r\n\r\n        let filteredItems = items.filter(it => it.id!==item.id);\r\n        \r\n        setItems(filteredItems);\r\n    }\r\n\r\n    function onDone(item){\r\n        let updatedItems = items.map(it =>{\r\n            if(it.id === item.id){\r\n                it.done = !it.done;\r\n            }\r\n            return it;\r\n        })\r\n\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    function onHideModal(event){\r\n\r\n        let target = event.target;\r\n\r\n        if(target.id === 'modal'){\r\n            setShowModal(false);\r\n        }\r\n        console.log(target);\r\n\r\n    }\r\n\r\n    return(\r\n        <div className='content'>\r\n            <header className='header'><h1 className='title'>Task List</h1><button className='btn' onClick={()=>{ setShowModal(true)}}><img className='icon' alt='add' src='./assets/add.png'></img></button>\r\n            </header>\r\n\r\n                <div className='container'>\r\n                \r\n                <List onDone={onDone} onItemDeleted={onItemDeleted} items={items}></List>\r\n\r\n                <Lottie options={defaultOptions}\r\n                height={700}\r\n                width={600}\r\n                isStopped={animationState.isStopped}\r\n                isPaused={animationState.isPaused}/>\r\n                \r\n\r\n                <Modal show={showModal} onHideModal={onHideModal}>  <TodoForm onAddItem={onAddItem}></TodoForm> </Modal>\r\n                </div>\r\n        \r\n        <footer className=\"footer\">\r\n\r\n            <a href=\"https://github.com/ValberJunior\"><img className='icon' alt='github' src='./assets/github.png'/></a>\r\n            <a href=\"https://www.linkedin.com/in/valber-junior-238217b4/\"><img className='icon' alt='linkedin' src='./assets/linkedin.png'/></a>\r\n\r\n        </footer>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Todo;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Todo from './Todo';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Todo />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}